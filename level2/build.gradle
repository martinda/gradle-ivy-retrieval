plugins {
  id 'ivy-publish'
  id 'distribution'
}

def user = System.getProperty("user.name")
group = "org.${user}"
version = "2.1.0"

repositories {
    ivy {
        url "/tmp/${user}/gradle-ivy-repo"

        layout "pattern", {
            artifact "[organisation]/[module]/[revision]/[artifact]-[revision]-[type].[ext]"
            ivy "[organisation]/[module]/[revision]/ivy.xml"
            m2compatible = true
        }
    }
}

configurations {
   compile
}

dependencies {
    compile group: "org.${user}", name: "moduleA", version: "1.0.0", configuration:"headers"
}

task copyDeps(type: Copy) {
    inputs.files configurations.compile
    from configurations.compile
    into "${buildDir}/layout"
}

task resolveIvyDescriptorFiles {
    doLast {
        def componentIds = configurations.compile.incoming.resolutionResult.allDependencies.collect { it.selected.id }

        def result = dependencies.createArtifactResolutionQuery()
            .forComponents(componentIds)
            .withArtifacts(IvyModule, IvyDescriptorArtifact)
            .execute()

        for (component in result.resolvedComponents) {
            component.getArtifacts(IvyDescriptorArtifact).each {
                println("Component: "+component+", "+it.file.class)
            }
        }
    }
}
