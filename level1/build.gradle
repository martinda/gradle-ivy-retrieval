plugins {
  id 'ivy-publish'
  id 'distribution'
}

def user = System.getProperty("user.name")
group = "org.${user}"
version = "1.0.0"

def sourceArchiveCopySpec = project.copySpec {
    from ('src')
}

task sourceArchive(type: Tar) {
    baseName         = rootProject.name
    includeEmptyDirs = false
    compression      = Compression.GZIP
    classifier       = 'source'
    with sourceArchiveCopySpec
    destinationDir(libsDir)
}

def headersArchiveCopySpec = project.copySpec {
    from ('src') {
        include('header*')
    }
}

task headersArchive(type: Tar) {
    baseName         = rootProject.name
    includeEmptyDirs = false
    compression      = Compression.GZIP
    classifier       = 'headers'
    with headersArchiveCopySpec
    destinationDir libsDir
}

publishing {
    repositories {
        ivy {
            url "/tmp/${user}/gradle-ivy-repo"

            // With Ivy, getting both the artifact and the ivy patterns was critical
            // so do it with Gradle as well
            layout "pattern", {
                artifact "[organisation]/[module]/[revision]/[artifact]-[revision]-[type].[ext]"
                ivy "[organisation]/[module]/[revision]/ivy.xml"
                m2compatible = true
            }
        }
    }
    publications {
        ivy(IvyPublication) {
            configurations {
                headers
                source { extend "headers" }
            }
            artifact(headersArchive) {
                 type "headers"
                 extension "tgz"
                 name "level1"
            }
            artifact(sourceArchive) {
                 type "source"
                 extension "tgz"
                 name "level1"
            }
        }
    }
}
